# Configuração para Coolify - Sistema de Controle de Sinistros BRSAMOR
# Este arquivo define como o Coolify deve fazer o deploy da aplicação

version: '3.8'

services:
  # Backend FastAPI
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    environment:
      # Banco Principal (AUTOMACAO_BRSAMOR)
      - DB_SERVER=${DB_SERVER}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      
      # Banco Transporte (dtbTransporte)
      - DB_TRANSPORT_SERVER=${DB_TRANSPORT_SERVER}
      - DB_TRANSPORT_DATABASE=${DB_TRANSPORT_DATABASE}
      - DB_TRANSPORT_USERNAME=${DB_TRANSPORT_USERNAME}
      - DB_TRANSPORT_PASSWORD=${DB_TRANSPORT_PASSWORD}
      
      # Configurações de Segurança
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      
      # Configurações da Aplicação
      - ENVIRONMENT=production
      - DEBUG=false
      - CORS_ORIGINS=*
      - TRUST_SERVER_CERTIFICATE=yes
      - ENCRYPT=no
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    expose:
      - "8000"
    
    labels:
      - "coolify.managed=true"
      - "coolify.type=application"
      - "coolify.name=sinistros-backend"

  # Frontend React + Nginx
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - VITE_API_BASE_URL=/api
        - VITE_DEMO_MODE=false
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    ports:
      - "80:80"
    
    labels:
      - "coolify.managed=true"
      - "coolify.type=application"
      - "coolify.name=sinistros-frontend"
      - "traefik.enable=true"
      - "traefik.http.routers.sinistros.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.sinistros.tls=true"
      - "traefik.http.routers.sinistros.tls.certresolver=letsencrypt"

networks:
  default:
    name: coolify
    external: true